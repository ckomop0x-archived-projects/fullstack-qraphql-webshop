{"version":3,"file":"static/webpack/static/development/pages/items.js.3a6ad14599e47276e6b9.hot-update.js","sources":["webpack:///./components/Items.jsx"],"sourcesContent":["import React, { Component } from 'react';\nimport { Query } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport styled from 'styled-components';\nimport Item from './Item';\nimport Pagination from './Pagination';\nimport { perPage } from '../config';\n\nexport const ALL_ITEMS_QUERY = gql`\n  query ALL_ITEMS_QUERY($skip: Int = 0, $first: Int = ${perPage}) {\n    items(first: $first, skip: $skip, orderBy: createdAt_DESC) {\n      id\n      title\n      price\n      description\n      image\n      largeImage\n      price\n    }\n  }\n`;\n\nconst Center = styled.div`\n  text-align: center;\n  margin: 0 auto;\n`;\n\nconst ItemsList = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  grid-gap: 60px;\n  max-width: ${({ theme }) => theme.maxWidth};\n  margin: 0 auto;\n`;\n\nconst Items = props => {\n  return (\n    <div>\n      <Query\n        query={ALL_ITEMS_QUERY}\n        ssr={true}\n        variables={{\n          skip: props.page * perPage - perPage\n        }}\n      >\n        {({ data, error, loading }) => {\n          if (error) return <p>We got an error {error.message}</p>;\n          if (loading) return <p>We load a data for you...</p>;\n          return data ? (\n            <Center>\n              <Pagination page={props.page} />\n              <ItemsList>\n                {data.items.map(item => (\n                  <Item item={item} key={item.id} />\n                ))}\n              </ItemsList>\n              <Pagination page={props.page} />\n            </Center>\n          ) : null;\n        }}\n      </Query>\n    </div>\n  );\n};\n\nexport default Items;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAcA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AADA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAIA;AACA;AACA;;;;A","sourceRoot":""}